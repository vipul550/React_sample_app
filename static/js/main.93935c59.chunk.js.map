{"version":3,"sources":["serviceWorker.js","fakeGenreService.js","fakeMovieService.js","components/Like.jsx","components/Paginate.jsx","components/ListGroup.jsx","components/Movies.jsx","util/Paginate.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","getMovies","Like","props","classes","react_default","a","createElement","onClick","onLike","style","cursor","className","Paginate","_ref","MoviesCount","PageSize","handlePageClick","TotalPages","Pages","_","range","Fragment","aria-label","map","item","key","ListGroup","generes","onGenereClick","href","class","genere","Movies","state","Pagesize","length","CurrentPage","Genere","GenereCount","paginatedMovies","handleClick","Movie","FilteredMovies","_this","setState","handleLike","indexOf","handleGenereClick","console","log","results","obj","includes","page","_this2","this","_this$state","paginatedMoviesT","items","pageNumber","pageSize","startIndex","slice","take","value","paginate","components_ListGroup","scope","components_Like","components_Paginate","Component","ReactDOM","render","components_Movies","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.93935c59.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.css';\r\nconst Like = (props) => {\r\n    let classes = 'fa fa-heart';\r\n    if(!props.Like) {\r\n        classes += '-o';\r\n    }\r\n    return ( \r\n\r\n        <i onClick ={props.onLike}\r\n        style={{cursor : \"pointer\"}} \r\n        className= {classes}></i>\r\n     );\r\n}\r\n \r\nexport default Like;","import React from 'react';\r\nimport Movies from './Movies';\r\nimport _ from 'lodash';\r\nimport { tsPropertySignature } from '@babel/types';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Paginate = ({MoviesCount,PageSize,handlePageClick}) => {\r\n    const TotalPages = MoviesCount / PageSize;\r\n    const Pages = _.range(1,TotalPages+1);\r\n\r\n    return (<React.Fragment>\r\n    <nav aria-label=\"Page navigation example\">\r\n    <ul className=\"pagination\">\r\n    {\r\n        Pages.map(item => \r\n          <li className=\"page-item\">\r\n        <a className=\"page-link\" key ={item}  onClick={()=>handlePageClick(item)}>{item}</a>\r\n      </li>\r\n      )\r\n      }\r\n    </ul>\r\n  </nav></React.Fragment>);\r\n}\r\n \r\nPaginate.propTypes = {\r\n  MoviesCount : PropTypes.number.isRequired,\r\n  PageSize : PropTypes.number.isRequired,\r\n  handlePageClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Paginate;","import React from 'react';\r\nimport { tsPropertySignature } from '@babel/types';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\nconst ListGroup = ({generes,onGenereClick}) => {\r\n    return (<React.Fragment>\r\n       <div className=\"list-group\">\r\n       <a href=\"#\" class=\"list-group-item list-group-item-action active\" onClick={()=>onGenereClick(_.map(generes, '_id'))}>All Gneres</a>\r\n           {\r\n               generes.map(genere=>\r\n                <a href=\"#\" key={genere._id} class=\"list-group-item list-group-item-action\" onClick={()=>onGenereClick([genere._id])}>{genere.name}</a>\r\n               \r\n               )\r\n           }\r\n       </div>\r\n       </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default ListGroup;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from '../fakeMovieService';\r\nimport Like from './Like';\r\nimport Paginate from './Paginate';\r\nimport {paginate} from '../util/Paginate.js';\r\nimport ListGroup from './ListGroup';\r\nimport { getGenres } from '../fakeGenreService';\r\nimport _ from 'lodash';\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n\r\n    Movies : getMovies(),\r\n    Pagesize : 3,\r\n    MoviesCount : getMovies().length,\r\n    CurrentPage : 1,\r\n    Genere : getGenres(),\r\n    GenereCount : getGenres().length,\r\n    paginatedMovies:getMovies()\r\n    \r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const{ MoviesCount , Pagesize,Movies,CurrentPage,Genere,paginatedMovies } = this.state;\r\n  \r\n   let  paginatedMoviesT = paginate(paginatedMovies,CurrentPage,this.state.Pagesize);\r\n    \r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <ListGroup generes={Genere} onGenereClick={this.handleGenereClick}\r\n              ></ListGroup>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n            <table className=\"table table-dark\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Title</th>\r\n              <th scope=\"col\">Genere</th>\r\n              <th scope=\"col\">Stock</th>\r\n              <th scope=\"col\">Rate</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n                paginatedMoviesT.map (\r\n                    Movie => (\r\n                        <tr>\r\n                            <td>{Movie.title}</td>\r\n                            <td>{Movie.genre.name}</td>\r\n                            <td>{Movie.numberInStock}</td>\r\n                            <td>{Movie.dailyRentalRate}</td>\r\n                            <td>{<Like Like= {Movie.liked} onLike={()=>this.handleLike(Movie)}></Like>}</td>\r\n                            <td><button className=\"btn btn-danger\" onClick={() => this.handleClick(Movie)}>Delete</button></td>\r\n                        </tr>\r\n                    )\r\n                )\r\n\r\n            }\r\n          </tbody>\r\n        </table>\r\n        <Paginate handlePageClick={this.handlePageClick} PageSize = {Pagesize} MoviesCount={MoviesCount}\r\n        ></Paginate>\r\n            </div>\r\n        </div>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  handleClick = (Movie) => {\r\n\r\n       const FilteredMovies = this.state.Movies.filter(\r\n            item => item._id != Movie._id\r\n       );\r\n       this.setState({\r\n            Movies : FilteredMovies\r\n       })\r\n  }\r\n\r\n  handleLike = (Movie) => {\r\n       \r\n     this.state.Movies[ this.state.Movies.indexOf(Movie)].liked = !Movie.liked;\r\n\r\n      this.setState({\r\n          Movies: this.state.Movies\r\n      })\r\n\r\n\r\n  }\r\n\r\n  handleGenereClick = (genere) => {\r\n    console.log(genere);\r\n    const results = this.state.Movies.filter(obj => genere.includes(obj.genre._id));\r\n    this.setState({\r\n      paginatedMovies: results\r\n    })\r\n    this.setState({\r\n      MoviesCount:results.length\r\n\r\n    })\r\n    console.log(results);\r\n  }\r\n\r\n  handlePageClick = (page) => {\r\n      console.log(page);\r\n\r\n      this.setState({\r\n        CurrentPage:page\r\n      })\r\n      \r\n\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items,pageNumber,pageSize){\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\nimport Movies from './components/Movies';\n\nReactDOM.render(<Movies />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}